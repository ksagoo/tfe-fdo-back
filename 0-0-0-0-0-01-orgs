from urllib.parse import urljoin

def find_network_list_ids_by_name_substring_fast(session, base_url, name_substring, return_first=False):
    """
    Quickly finds network lists whose name contains the given substring (case-insensitive).
    Only uses the top-level list metadata (no detail lookups).
    Returns a list of {name, id} dicts or just one match if return_first=True.
    """
    url = urljoin(base_url, "/network-list/v2/network-lists")
    resp = session.get(url)

    if not resp.ok:
        raise Exception(f"Failed to list network lists: {resp.status_code} - {resp.text}")

    matched = []

    for nl in resp.json().get("networkLists", []):
        name = nl.get("name", "")
        unique_id = nl.get("uniqueId", "")
        if name_substring.lower() in name.lower():
            print(f"[MATCH] Name: {name} â†’ ID: {unique_id}")
            matched.append({"name": name, "id": unique_id})
            if return_first:
                return matched[0]

    if not matched:
        print(f"[INFO] No network lists found containing: '{name_substring}'")

    return matched[0] if return_first and matched else matched
