def clone_and_rename_client_lists(session, base_url, config_id, version, access_group):
    print(f"[INFO] Cloning client lists for config ID {config_id}, version {version}")
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "details": []
    }

    list_url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/client-lists"
    try:
        response = session.get(list_url)
        response.raise_for_status()
        client_lists = response.json().get("clientLists", [])
    except Exception as e:
        print(f"[ERROR] Failed to fetch client lists: {e}")
        return summary

    for cl in client_lists:
        cl_id = cl.get("listId")
        cl_name = cl.get("name", "")
        cl_type = cl.get("type")
        cl_description = cl.get("description", "")
        cl_items = cl.get("list", [])

        # Only process lists from the template config
        if "Security Policy Template" not in cl_name:
            continue

        summary["processed"] += 1

        # New name: replace "Security Policy Template" with SC-access_group
        new_name = cl_name.replace("Security Policy Template", f"SC-{access_group}")
        payload = {
            "name": new_name,
            "type": cl_type,
            "description": cl_description,
            "list": cl_items
        }

        clone_url = f"{base_url}/client-list/v1/lists"
        try:
            clone_response = session.post(clone_url, json=payload)
            clone_response.raise_for_status()
            new_list_id = clone_response.json().get("listId", "unknown")
            summary["successful"] += 1
            summary["details"].append({
                "id": new_list_id,
                "name": new_name,
                "status": "success"
            })
            print(f"[INFO] Cloned client list as '{new_name}' (ID: {new_list_id})")
        except Exception as e:
            summary["failed"] += 1
            summary["details"].append({
                "id": cl_id,
                "name": new_name,
                "status": "failed",
                "error": str(e)
            })
            print(f"[ERROR] Failed to clone client list '{cl_name}': {e}")

    return summary

results["clone_client_lists"] = clone_and_rename_client_lists(session, base_url, config_id, version, access_group)
