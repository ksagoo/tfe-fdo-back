def get_or_create_config(session, base_url, config_name, dry_run=False):
    try:
        url = f"{base_url}/appsec/v1/configs"
        resp = session.get(url)
        resp.raise_for_status()
        configs = resp.json().get("configurations", [])
    except Exception as e:
        print(f"[ERROR] Failed to retrieve configurations: {e}")
        return None, None

    for config in configs:
        if config["name"] == config_name:
            print(f"[INFO] Found existing configuration: {config['name']} (ID: {config['id']})")
            return config["id"], config["latestVersion"]

    print(f"[ERROR] Configuration '{config_name}' not found. Importer cannot proceed.")
    return None, None
    

onfig_id, version = get_or_create_config(session, base_url, config_name)

if not config_id:
    print("[FATAL] Cannot continue without a valid configuration ID.")
    sys.exit(1)
