def reassign_custom_rules(session, base_url, config_id, version, old_policy_id, new_policy_id):
    url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/custom-rules"
    response = session.get(url)
    response.raise_for_status()
    rules = response.json().get("customRules", [])

    result = { "processed": len(rules), "successful": 0, "failed": 0, "details": [] }

    for rule in rules:
        if rule.get("policyId") != old_policy_id:
            continue

        rule_id = rule.get("id")
        update_url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/custom-rules/{rule_id}"

        # Rebuild payload with only allowed fields
        payload = {
            "name": rule.get("name"),
            "description": rule.get("description", ""),
            "tag": rule.get("tag", ""),
            "condition": rule.get("condition", {}),
            "ruleActions": rule.get("ruleActions", []),
            "policyId": new_policy_id
        }

        try:
            session.put(update_url, json=payload)
            result["successful"] += 1
            result["details"].append({ "id": rule_id, "name": rule.get("name"), "status": "success" })
        except Exception as e:
            result["failed"] += 1
            result["details"].append({ "id": rule_id, "name": rule.get("name"), "status": "failed", "error": str(e) })

    return result
