def list_active_client_lists(session, base_url, section=None):
    print("[INFO] Fetching active (non-deletable) client lists...")

    try:
        url = f"{base_url}/client-list/v1/lists?includeDeprecated=true&includeNetworkLists=true"
        if section:
            url += f"&section={section}"

        resp = session.get(url)
        resp.raise_for_status()
        client_lists = resp.json().get("content", [])
        print(f"[INFO] Retrieved {len(client_lists)} total client lists.")
    except Exception as e:
        print(f"[ERROR] Failed to fetch client lists: {e}")
        return

    print("\n[ACTIVE CLIENT LISTS] (DELETE.available == false)")
    for cl in client_lists:
        delete_available = cl.get("availableActions", {}).get("DELETE", {}).get("available", True)
        if not delete_available:
            print(f"- {cl.get('name', '')} | listId: {cl.get('listId')} | DELETE.available: false")

