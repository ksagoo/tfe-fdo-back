def reassign_waf_overrides(session, base_url, config_id, version, old_policy_id, new_policy_id):
    print("[INFO] RUNNING: reassign_waf_overrides")

    url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/waf/overrides"
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "details": []
    }

    try:
        response = session.get(url)
        response.raise_for_status()
        overrides = response.json().get("overrides", [])

        if not overrides:
            print(f"[INFO] No WAF overrides found for policy {old_policy_id}, skipping.")
            return summary

        reassigned = []
        for override in overrides:
            summary["processed"] += 1
            if override.get("policyId") == old_policy_id:
                override["policyId"] = new_policy_id
                reassigned.append(override)

        if reassigned:
            put_resp = session.put(url, json={"overrides": reassigned})
            put_resp.raise_for_status()
            summary["successful"] = len(reassigned)
            summary["details"].append({
                "id": "waf_overrides",
                "status": "success",
                "count": len(reassigned)
            })

    except requests.exceptions.HTTPError as e:
        if e.response.status_code == 404:
            print(f"[INFO] No WAF overrides found (404), skipping reassignment.")
        else:
            summary["failed"] += 1
            summary["details"].append({
                "id": "waf_overrides",
                "status": "failed",
                "error": str(e)
            })
    except Exception as ex:
        summary["failed"] += 1
        summary["details"].append({
            "id": "waf_overrides",
            "status": "failed",
            "error": str(ex)
        })

    return summary
