def get_policy_id(session, base_url, config_id, env):
    """
    Retrieve the policy ID from Akamai for the given configuration ID and environment.

    Args:
        session: Authenticated session object.
        base_url (str): Akamai API base URL.
        config_id (str): Security configuration ID.
        env (str): Environment name, e.g., 'prod' or 'nonprod'.

    Returns:
        str: The policy ID if found, or None.
    """
    try:
        url = f"{base_url}/appsec/v1/configs/{config_id}/security-policies"
        resp = session.get(url)

        if resp.status_code not in [200, 201]:
            print(f"[ERROR] Failed to retrieve policies. Status: {resp.status_code}, Response: {resp.text}")
            return None

        policies = resp.json().get("securityPolicies", [])
        env_prefix = "Prod" if env.lower() == "prod" else "NonProd"

        for policy in policies:
            name = policy.get("policyName", "")
            if env_prefix.lower() in name.lower():
                print(f"[INFO] Found {env.upper()} policy in Akamai: {name} (ID: {policy['policyId']})")
                return policy["policyId"]

        print(f"[WARN] No matching policy found in Akamai for environment: {env}")
        return None

    except Exception as e:
        print(f"[ERROR] Exception while retrieving policy ID: {e}")
        return None
