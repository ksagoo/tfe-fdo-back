âœ… UPDATE THIS FUNCTION: find_policy_id_by_prefix()

Replace the last lines in the function with:

        print(f"[WARN] No policy name starting with '{prefix}' found.")
        if prefix == "defpol":
            print("[INFO] Creating default security policy...")
            return create_default_security_policy(session, base_url, config_id, version)
        return None

INSERT THIS FUNCTION near the other helpers:

def create_default_security_policy(session, base_url, config_id, version):
    url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/security-policies"
    payload = {
        "policyName": "Default-Policy",
        "policyPrefix": "defpol",
        "securityControls": {
            "applyApiConstraints": False,
            "applyApplicationLayerControls": True,
            "applyBotmanControls": True,
            "applyReputationControls": True
        }
    }
    try:
        response = session.post(url, json=payload)
        if response.status_code in [200, 201]:
            created = response.json()
            print(f"[INFO] Created default security policy: {created['policyName']} (ID: {created['policyId']})")
            return created["policyId"]
        else:
            print(f"[ERROR] Failed to create default policy: {response.status_code} {response.text}")
    except Exception as e:
        print(f"[ERROR] Exception creating default security policy: {e}")
    return None
