def print_all_network_lists(session, base_url):
    """
    Fetches and prints all available network lists with name and uniqueId, regardless of match.
    """
    list_url = urljoin(base_url, "/network-list/v2/network-lists")
    resp = session.get(list_url)

    if not resp.ok:
        raise Exception(f"Failed to list network lists: {resp.status_code} - {resp.text}")

    entries = resp.json().get("networkLists", [])
    print(f"[INFO] Found {len(entries)} network list entries")

    for entry in entries:
        list_id = entry.get("id")
        if not list_id:
            print("[WARN] Skipping list with missing 'id'")
            continue

        detail_url = urljoin(base_url, f"/network-list/v2/network-lists/{list_id}")
        detail_resp = session.get(detail_url)

        if detail_resp.ok:
            data = detail_resp.json()
            name = data.get("name", "<no name>")
            unique_id = data.get("uniqueId", "<no uniqueId>")
            print(f"- {name} â†’ {unique_id}")
        else:
            print(f"[ERROR] Failed to get details for list ID {list_id}: {detail_resp.status_code}")
