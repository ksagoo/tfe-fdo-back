def clone_and_rename_client_lists(session, base_url, config_id, version, access_group, section):
    summary = {"processed": 0, "successful": 0, "failed": 0, "details": []}
    prefix = f"SC-{access_group}"
    
    # Get all client lists
    list_url = f"{base_url}/client-list/v1/lists?includeItems=true&includeDeprecated=true"
    response = session.get(list_url)
    
    if not response.ok:
        print(f"[ERROR] Failed to fetch client lists: {response.status_code} {response.text}")
        return summary

    all_lists = response.json().get("content", [])
    print(f"[DEBUG] Retrieved {len(all_lists)} total client lists")

    # Filter lists for template
    for cl in all_lists:
        original_name = cl.get("name", "")
        list_id = cl.get("listId")
        if not list_id or "Security Policy Template" not in original_name:
            print(f"[DEBUG] Skipping list '{original_name}': does not contain 'Security Policy Template'")
            continue

        # New name generation
        new_name = original_name.replace("Security Policy Template", prefix)
        print(f"[DEBUG] Preparing to clone list '{original_name}' as '{new_name}'")

        # Check if this name already exists in Akamai
        existing = [l for l in all_lists if l.get("name") == new_name]
        if existing:
            print(f"[INFO] Skipping already existing list: {new_name}")
            continue

        # Attempt cloning
        clone_url = f"{base_url}/client-list/v1/lists/{list_id}/clone"
        payload = {
            "name": new_name,
            "description": f"Cloned from {original_name}",
            "accessGroup": access_group
        }

        try:
            clone_resp = session.post(clone_url, json=payload)
            summary["processed"] += 1
            if clone_resp.ok:
                result = clone_resp.json()
                print(f"[SUCCESS] Cloned list '{original_name}' => '{new_name}'")
                summary["successful"] += 1
                summary["details"].append({"id": result.get("listId"), "name": new_name, "status": "success"})
            else:
                print(f"[ERROR] Failed to clone list '{original_name}': {clone_resp.status_code} {clone_resp.text}")
                summary["failed"] += 1
                summary["details"].append({"id": list_id, "name": new_name, "status": "failed", "error": clone_resp.text})
        except Exception as e:
            print(f"[EXCEPTION] Error cloning list '{original_name}': {e}")
            summary["failed"] += 1
            summary["details"].append({"id": list_id, "name": new_name, "status": "failed", "error": str(e)})
    
    return summary
