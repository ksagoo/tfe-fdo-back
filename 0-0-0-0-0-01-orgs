def get_or_create_config(session, base_url, config_name, dry_run=False):
    url = f"{base_url}/appsec/v1/configs"
    try:
        response = session.get(url)
        response.raise_for_status()
        configs = response.json().get("configurations", [])
    except Exception as e:
        print(f"[ERROR] Failed to retrieve configurations: {e}")
        return None, None

    for config in configs:
        if config["name"] == config_name:
            print(f"[INFO] Found existing configuration: {config['name']} (ID: {config['id']})")
            return config["id"], config["latestVersion"]

    if dry_run:
        print(f"[DRY-RUN] Configuration '{config_name}' not found. Would create here.")
        # Fallback to first config just for lookups
        if configs:
            fallback_id = configs[0]["id"]
            fallback_version = configs[0]["latestVersion"]
            print(f"[DEBUG] Using fallback config ID {fallback_id}, version {fallback_version} for lookups.")
            return fallback_id, fallback_version
        else:
            print("[DEBUG] No configs to fallback to.")
            return "dryrun-config-id", "dryrun-version-id"

    print(f"[ERROR] Configuration '{config_name}' not found and create logic not implemented.")
    return None, None
