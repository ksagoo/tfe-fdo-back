def domain_exists_nslookup(domain):
    """
    Uses nslookup to check if the domain resolves.
    Returns True if nslookup returns a valid response,
    or False if it indicates the domain doesn't exist.
    """
    try:
        result = subprocess.check_output(["nslookup", domain], universal_newlines=True)
        # If nslookup finds no address, the output will include phrases like "Non-existent domain"
        if "Non-existent domain" in result or "can't find" in result.lower():
            print(f"[nslookup] {domain} did not resolve.")
            return False
        print(f"[nslookup] {domain} resolved successfully.")
        return True
    except Exception as e:
        print(f"Error running nslookup: {e}")
        return False

def can_create_enrollment(session, base_url, contract_id, common_name):
    """
    Checks if a new enrollment can be created for the given common name.
    It verifies two things:
      1. The domain resolves via nslookup.
      2. The common name is not already in use in an existing enrollment.
    """
    if not domain_exists_nslookup(common_name):
        print(f"Error: The common name '{common_name}' does not resolve in DNS.")
        return False

    if common_name_exists(session, base_url, contract_id, common_name):
        print(f"Error: The common name '{common_name}' is already in use.")
        return False

    return True

    # Then check:
    if not can_create_enrollment(session, base_url, contract_id, common_name):
        print("Cannot create enrollment; aborting.")
        sys.exit(1)
    else:
        print("All checks passed; you can proceed to create the enrollment.")


