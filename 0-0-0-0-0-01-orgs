def clone_and_rename_client_lists(session, base_url, config_id, version, access_group, section):
    prefix = f"SC-{access_group}"
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "details": []
    }

    print(f"[INFO] Fetching all client lists from control center...")
    url = f"{base_url}/client-list/v3/lists?includeItems=true&includeDeprecated=true"
    response = session.get(url)
    response.raise_for_status()
    all_client_lists = response.json()

    print(f"[INFO] Searching for client lists containing 'Security Policy Template'")
    template_lists = [cl for cl in all_client_lists if "Security Policy Template" in cl.get("name", "")]

    for cl in template_lists:
        original_name = cl.get("name", "")
        suffix = original_name.replace("Security Policy Template", "").strip()
        new_name = f"{prefix} {suffix}".strip()

        # Check if list with new_name already exists
        existing = [ecl for ecl in all_client_lists if ecl["name"] == new_name]
        if existing:
            print(f"[INFO] Skipping existing list: {new_name} (listId={existing[0]['listId']})")
            continue

        print(f"[DEBUG] Cloning list '{original_name}' => '{new_name}'")

        payload = {
            "name": new_name,
            "type": cl["type"],
            "listType": cl["listType"],
            "contractId": cl["contractId"],
            "groupId": cl["groupId"],
            "description": f"Cloned from {original_name}",
            "items": cl.get("items", [])
        }

        if section:
            payload["section"] = section

        try:
            create_url = f"{base_url}/client-list/v3/lists"
            create_response = session.post(create_url, json=payload)
            create_response.raise_for_status()
            created_id = create_response.json().get("listId")

            print(f"[SUCCESS] Created: {new_name} (ID: {created_id})")
            summary["processed"] += 1
            summary["successful"] += 1
            summary["details"].append({
                "id": created_id,
                "name": new_name,
                "status": "success"
            })
        except Exception as e:
            print(f"[ERROR] Failed to clone '{original_name}' as '{new_name}': {e}")
            summary["processed"] += 1
            summary["failed"] += 1
            summary["details"].append({
                "id": None,
                "name": new_name,
                "status": "failed",
                "error": str(e)
            })

    return summary
