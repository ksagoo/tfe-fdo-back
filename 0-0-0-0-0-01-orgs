def get_config_id(session, base_url, config_name, dry_run=False):
    url = f"{base_url}/appsec/v1/configs"
    try:
        response = session.get(url)
        response.raise_for_status()
        configs = response.json().get("configurations", [])
    except Exception as e:
        raise RuntimeError(f"[ERROR] Failed to retrieve configurations: {e}")

    for config in configs:
        if config["name"] == config_name:
            print(f"[INFO] Found config '{config_name}' with ID {config['id']}, version {config['latestVersion']}")
            return config["id"], config["latestVersion"]

    print(f"[ERROR] AppSec config '{config_name}' not found.")
    print("[DEBUG] Available configuration names:")
    for config in configs:
        print(f" - {config['name']}")

    if dry_run and configs:
        fallback_id = configs[0]["id"]
        fallback_version = configs[0]["latestVersion"]
        print(f"[DEBUG] [DRY-RUN] Using fallback config ID: {fallback_id}, version: {fallback_version}")
        return fallback_id, fallback_version

    raise ValueError(f"[ERROR] AppSec config '{config_name}' not found.")

config_id, version = get_config_id(session, base_url, config_name, args.dry_run)
