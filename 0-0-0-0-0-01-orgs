def clone_and_rename_client_lists(session, access_group_name, section=None):
    """
    Clones client lists whose names contain 'Security Policy Template',
    renaming them to SC-<access_group>-<suffix>. Skips cloning if a matching
    SC- list already exists and is still active. Re-clones if the existing
    list is flagged for deletion (DELETE.available == True).
    """
    print(f"\n==== Onboarding Client Lists ====")
    created_count = 0
    skipped_count = 0

    # Fetch all client lists
    existing_lists = session.get_all_client_lists()
    existing_name_to_id = {cl['name']: cl['uniqueId'] for cl in existing_lists}
    existing_name_to_delete_flag = {
        cl['name']: cl.get('availableActions', {}).get('DELETE', {}).get('available', False)
        for cl in existing_lists
    }

    for cl in existing_lists:
        name = cl['name']

        # Only consider lists with 'Security Policy Template' anywhere in name
        if 'Security Policy Template' not in name:
            continue

        # Ensure the template list is safe to clone from
        if not cl.get('availableActions', {}).get('DELETE', {}).get('available', False):
            print(f"[WARN] Skipping template list '{name}' — still ACTIVE and DELETE not available")
            continue

        # Extract suffix by removing 'Security Policy Template'
        suffix = name.replace('Security Policy Template', '').strip()
        new_name = f"SC-{access_group_name}-{suffix}"

        # Check if a list with this new name already exists
        if new_name in existing_name_to_id:
            if not existing_name_to_delete_flag.get(new_name, False):
                print(f"[INFO] Skipping clone: list '{new_name}' already exists and is active")
                skipped_count += 1
                continue
            else:
                print(f"[INFO] Re-cloning '{new_name}' — existing version is flagged for deletion")

        # Proceed with cloning
        try:
            cloned_list = session.clone_client_list(
                source_client_list_id=cl['uniqueId'],
                new_client_list_name=new_name,
                section=section
            )
            print(f"[INFO] Created client list '{new_name}' (ID: {cloned_list['uniqueId']})")
            created_count += 1
        except Exception as e:
            print(f"[ERROR] Failed to clone list '{name}': {e}")
            continue

    print(f"\n==== Client List Cloning Summary ====")
    print(f"Created: {created_count}, Skipped: {skipped_count}")
