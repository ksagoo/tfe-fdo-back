def find_policy_id_by_prefix(session, base_url, config_id, version, prefix):
    try:
        url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/security-policies"
        print(f"[DEBUG] Fetching policies from URL: {url}")
        response = session.get(url)
        response.raise_for_status()

        policies = response.json().get("securityPolicies", [])
        if not policies:
            print(f"[DEBUG] No security policies returned.")
            return None

        print(f"[DEBUG] Looking for policy prefix: '{prefix}'")
        print(f"[DEBUG] Available security policies in config ID {config_id}, version {version}:")

        for policy in policies:
            name = policy.get("policyName", "<unnamed>")
            pid = policy.get("policyId", "<no-id>")
            print(f" - {name} (ID: {pid})")
            if name.startswith(prefix):
                print(f"[DEBUG] Match found: {name} (ID: {pid})")
                return pid

        print(f"[WARN] No policy name starting with '{prefix}' found.")
        return None

    except Exception as e:
        print(f"[ERROR] Failed to lookup policy ID for prefix '{prefix}': {e}")
        return None
