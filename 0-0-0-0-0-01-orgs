def reassign_client_lists(session, base_url, config_id, version, old_policy_id, new_policy_id):
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "details": []
    }

    # GET all client list activations at config level
    url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/client-list-activations"
    print(f"[DEBUG] Fetching all client list activations for version: {url}")

    try:
        response = session.get(url)
        response.raise_for_status()
        all_client_lists = response.json().get("clientLists", [])
    except Exception as e:
        print(f"[ERROR] Failed to fetch client list activations: {e}")
        return summary

    # Filter for client lists assigned to TEMP policy
    filtered_lists = [
        cl for cl in all_client_lists
        if cl.get("policyId") == old_policy_id
    ]

    print(f"[DEBUG] Found {len(filtered_lists)} client lists assigned to TEMP policy ID: {old_policy_id}")

    if not filtered_lists:
        print("[INFO] No client lists to reassign.")
        return summary

    # Reassign each list
    for cl in filtered_lists:
        list_id = cl.get("id")
        summary["processed"] += 1

        if not list_id:
            print(f"[WARN] Client list with no ID: {cl}")
            summary["failed"] += 1
            summary["details"].append({
                "id": "unknown",
                "status": "failed",
                "error": "Missing list ID"
            })
            continue

        put_url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/security-policies/{new_policy_id}/client-list-activations/{list_id}"
        payload = {
            "policyId": new_policy_id
        }

        try:
            put_response = session.put(put_url, json=payload)
            put_response.raise_for_status()
            summary["successful"] += 1
            summary["details"].append({
                "id": list_id,
                "status": "success"
            })
            print(f"[INFO] Reassigned client list {list_id} to new policy.")
        except Exception as e:
            summary["failed"] += 1
            summary["details"].append({
                "id": list_id,
                "status": "failed",
                "error": str(e)
            })
            print(f"[ERROR] Failed to reassign client list {list_id}: {e}")

    return summary
