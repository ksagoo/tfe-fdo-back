try:
        config_id, version = get_config_id(session, base_url, config_name)
    except ValueError:
        print(f"[INFO] Configuration '{config_name}' not found. Attempting to create it...")
        try:
            config_id, version = create_appsec_config(
                session, base_url, config_name,
                contract_id, group_id, hostnames, description
            )

            if config_id is not None:
                # fallback to metadata if args.access_group not present
                access_group = metadata.get("access_group", "UNKNOWN")
                create_default_security_policies(session, base_url, config_id, version, access_group)
            else:
                print("[WARNING] Config creation returned no ID. Skipping policy creation.")

        except Exception as e:
            print(f"[ERROR] Could not create configuration: {e}")
            sys.exit(1)
