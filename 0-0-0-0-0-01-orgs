def clone_and_rename_client_lists(session, base_url, config_id, version, access_group, section=None):
    print(f"[INFO] DRY RUN: Cloning and renaming client lists from Security Policy Template for access group '{access_group}'")
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "results": []
    }

    # Fetch all client lists (active, deleted, etc.)
    url = f"{base_url}/client-list/v1/lists?includeDeprecated=true&includeNetworkLists=true"
    try:
        response = session.get(url)
        response.raise_for_status()
        client_lists = response.json().get("content", [])
    except Exception as e:
        print(f"[ERROR] Failed to fetch client lists: {e}")
        return summary

    # Build a map of existing SC- lists and their deletability
    existing_target_lists = {}
    for cl in client_lists:
        name = cl.get("name", "")
        is_deletable = cl.get("availableActions", {}).get("DELETE", {}).get("available", False)
        if name.startswith(f"SC-{access_group}"):
            existing_target_lists[name] = is_deletable

    # Evaluate source template lists
    for cl in client_lists:
        name = cl.get("name", "")
        list_id = cl.get("listId")
        list_type = cl.get("listType")
        list_format = cl.get("type")

        if not name.startswith("Security Policy Template"):
            continue

        suffix = name.replace("Security Policy Template", "").strip()
        new_name = f"SC-{access_group}-{suffix}"

        # Check if a corresponding target already exists and is in use
        if new_name in existing_target_lists and not existing_target_lists[new_name]:
            print(f"[SKIP] {new_name} already exists and is in use (not deletable)")
            continue

        print(f"[DRYRUN] Would clone '{name}' to '{new_name}'")
        summary["processed"] += 1
        summary["results"].append({
            "status": "dryrun",
            "source": name,
            "target": new_name,
            "listId": list_id
        })

    return summary
