def clone_and_rename_client_lists(session, base_url, config_id, version, access_group):
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "details": []
    }

    print(f"[INFO] Fetching all client lists from template config ID: {config_id}")
    url = f"{base_url}/client-list/v1/lists?includeItems=true&includeDeprecated=true"
    response = session.get(url)
    if not response.ok:
        raise Exception(f"[ERROR] Failed to fetch client lists: {response.status_code} - {response.text}")

    client_lists = response.json().get("content", [])
    print(f"[DEBUG] {len(client_lists)} client lists fetched")

    for cl in client_lists:
        original_name = cl.get("name", "")
        if "Security Policy Template" not in original_name:
            print(f"[SKIP] '{original_name}' does not contain 'Security Policy Template'")
            continue

        # Rename logic
        new_name = original_name.replace("Security Policy Template", access_group)
        print(f"[DEBUG] Preparing to clone: {original_name} => {new_name}")

        # Check for duplicates
        if any(existing.get("name", "") == new_name for existing in client_lists):
            print(f"[SKIP] Client list already exists with name: {new_name}")
            continue

        clone_url = f"{base_url}/client-list/v1/lists/{cl['listId']}/clone"
        payload = {
            "name": new_name,
            "description": cl.get("description", ""),
            "tags": cl.get("tags", []),
            "type": cl["type"]
        }

        try:
            clone_resp = session.post(clone_url, json=payload)
            clone_resp.raise_for_status()
            new_list = clone_resp.json()
            print(f"[SUCCESS] Cloned list '{original_name}' to '{new_list['name']}'")
            summary["successful"] += 1
            summary["details"].append({
                "id": new_list["listId"],
                "name": new_list["name"],
                "status": "success"
            })
        except Exception as e:
            print(f"[ERROR] Failed to clone list '{original_name}': {e}")
            summary["failed"] += 1
            summary["details"].append({
                "id": cl["listId"],
                "name": original_name,
                "status": "failed",
                "error": str(e)
            })

        summary["processed"] += 1

    return summary
