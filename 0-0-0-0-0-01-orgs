def reassign_low_post_count_rules(config_id, version, old_policy_id, new_policy_id, headers, base_url):
    print(f"[INFO] Reassigning low post count rules from policy {old_policy_id} to {new_policy_id}...")

    try:
        url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/security-policies/{old_policy_id}/custom-rules/low-post-count-rules"
        response = requests.get(url, headers=headers)
        response.raise_for_status()

        rules = response.json().get("rules", [])
        if not rules:
            print(f"[INFO] No low post count rules found in policy {old_policy_id}, skipping.")
            return {'policy_id': old_policy_id, 'status': 'skipped - no rules found'}

        success_count = 0
        for rule in rules:
            rule_data = {k: v for k, v in rule.items() if k != "id"}
            post_url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/security-policies/{new_policy_id}/custom-rules/low-post-count-rules"
            post_resp = requests.post(post_url, headers=headers, json=rule_data)

            if post_resp.status_code == 201:
                print(f"[INFO] Reassigned low post count rule to policy {new_policy_id}")
                success_count += 1
            else:
                print(f"[WARNING] Failed to reassign rule â€” {post_resp.status_code}: {post_resp.text}")

        return {'policy_id': old_policy_id, 'status': f'success - {success_count} rule(s) reassigned'}

    except requests.exceptions.HTTPError as e:
        if e.response.status_code == 404:
            print(f"[INFO] Low post count rules not found for policy {old_policy_id}, skipping reassignment.")
            return {'policy_id': old_policy_id, 'status': 'skipped - not found (404)'}
        else:
            print(f"[ERROR] HTTP error during low post count rule reassignment: {str(e)}")
            return {'policy_id': old_policy_id, 'status': f'error - {str(e)}'}

    except Exception as ex:
        print(f"[ERROR] Unexpected error during low post count rule reassignment: {str(ex)}")
        return {'policy_id': old_policy_id, 'status': f'error - {str(ex)}'}
