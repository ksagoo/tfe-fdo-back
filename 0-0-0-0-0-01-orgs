h1. Onboarding Automation – Step-by-Step User Guide

This document provides a structured walkthrough of the site onboarding process using the Jira Front Door form and automated Jenkins workflows. It is intended for engineers submitting onboarding requests and monitoring execution.

The process integrates with Jira, Akamai APIs, and Jenkins to automate the creation of CPS certificates, site delivery properties, security configurations, and final production activations.

---

h2. Step 0: Overview – Jira Workflow

The following workflow diagram outlines the full Jira onboarding process, from submission to final production deployment.

!01.jpeg!

The stages include:
- Form submission
- Initial change ticket validation
- Jenkins automation
- Production activation via secondary change approval

---

h2. Step 1: Submit the Jira Front Door Form

Navigate to the Jira Front Door and complete the onboarding form with the required fields.

!02.jpeg!

Ensure the following inputs are completed:
- Site or app name
- Environment (Staging or Production)
- Access group
- Primary and fallback FQDNs
- Both required change ticket IDs

Each field includes inline descriptions to assist users.

---

h2. Step 2: Change Ticket Requirements

The form requires two change tickets:

1. **Onboarding Change Ticket**  
   - Must be fully approved  
   - Must fall within an approved change window  
   - Validated at time of submission

2. **Property Activation and Security Configuration Change Ticket**  
   - May be in draft at submission  
   - Must be approved *prior* to final property activation in production

The pipeline checks:
- Change ticket approval status  
- Deployment window  
- Assignment group membership of the approver (access control)

!03.jpeg!

---

h2. Step 3: Email Notification and Acknowledgment

After submission, a Jira issue is created. Email notifications are sent to confirm the request and display approval workflow status.

!04.jpeg!

No further manual steps are needed if the initial ticket is valid.

---

h2. Step 4: Jenkins Pipeline Trigger

Once the first change ticket is validated, Jenkins automation is triggered via webhook.

!05.jpeg!

Each pipeline stage corresponds to a logical onboarding step, automatically executed.

---

h2. Step 5: Access Group Verification and CPS Creation

The pipeline validates the existence of the provided access group.  
If valid, a CPS (Certificate Provisioning System) request is created for the FQDNs.

!06.jpeg!

You will see Jenkins logs indicating:
- Access group matched  
- CPS certificate creation in progress

---

h2. Step 6: Site Delivery Property Creation

A new Akamai property is created in the specified environment (typically staging). The configuration includes:
- Hostnames
- Rule format
- Group assignment

!07.jpeg!

The property is activated in the Staging network during this step.

---

h2. Step 7: Clone Security Configuration

A template configuration (e.g. *Security Policy Template*) is cloned. This includes:
- Client list replication (renamed to `SC-{AccessGroup}-{Suffix}`)
- Match targets
- Rate limits
- Custom rules
- Reputation profiles

!08.jpeg!

The cloned configuration is isolated per access group to ensure no sharing between environments.

---

h2. Step 8: Activate in Staging

Once the property and security config are in place, the property is activated in the staging network.

!09.jpeg!

Logs will indicate success or failure, and the Jira workflow status will update automatically if successful.

---

h2. Step 9: Prepare for Production Activation

Before triggering the final step (Production activation), the second change ticket must be fully approved.

!10.jpeg!

Final validation includes:
- Change window compliance
- Assignment group membership checks
- Correct ticket type and reference

When approved, the production activation proceeds automatically.

---

h2. Step 10: Production Property Activation

With both change tickets approved, the pipeline activates the Akamai property in the Production network.

!11.jpeg!

The logs will confirm activation, and the Jira issue will transition to the final stage.

---

h2. Step 11: Custom Rule Reassignment

All custom rules from the template config are reassigned to the newly cloned configuration.

!12.jpeg!

These may include:
- Header checks
- Path-specific rules
- Behavioral restrictions

Each rule is updated in-place using Akamai API endpoints.

---

h2. Step 12: Client List Cloning and Mapping

Client lists tied to the *Security Policy Template* are cloned and renamed using the pattern:

*SC-{AccessGroup}-{OriginalSuffix}*

!13.jpeg!

This ensures isolation per environment and access group.

---

h2. Step 13: Match Target Reassignment

Match targets are reassigned or cloned to associate the correct FQDNs and bypass lists with the cloned security configuration.

!14.jpeg!

- The default bypass list is always included  
- The access group-specific list (e.g., *SC-{AccessGroup} Security Bypass List*) is dynamically added

---

h2. Step 14: Rate Limiting Policy Assignment

Rate limit rules are cloned and reassigned to the new configuration.

!15.jpeg!

Each policy is validated to ensure it is:
- Properly named
- Assigned to correct match targets
- Not referencing deprecated IDs

---

h2. Step 15: Reputation Profile Cloning and Update

Any reputation profiles from the template are cloned and renamed for the new config.

!16.jpeg!

This prevents policy overlap and enables per-environment tuning.

---

h2. Step 16: Final Security Configuration Activation

The updated configuration (with all components) is activated in the correct environment.

!17.jpeg!

This includes:
- All rulesets
- Match targets
- Rate limits
- Client list references

---

h2. Step 17: Status Updates to Jira

The automation updates the Jira issue with success or failure of each module and appends a final summary.

!18.jpeg!

If any module fails, the issue is moved to a manual triage state for engineering follow-up.

---

h2. Step 18: Engineering Notifications

The engineer who submitted the Front Door form is emailed with a completion summary and final approval state.

!19.jpeg!

This includes:
- Property details
- CPS certificate IDs
- Network list mappings
- Change ticket validation results

---

h2. Step 19: QA & Validation

The engineering team is expected to perform a QA validation once onboarding completes. They will verify:

- DNS is resolving
- Edge response is valid
- Configuration matches security expectations

!20.jpeg!

If QA passes, the issue is closed.

---

h2. Step 20: Logs and Audit Trail

Each stage of the Jenkins pipeline writes a detailed audit trail in Confluence or Splunk (depending on integration).

!21.jpeg!

This allows historical validation of onboarding events and full change traceability.

---

h2. Step 21: Complete – Issue Auto-Closed

Once all modules are completed and QA passed, the Jira issue transitions to “Closed” automatically.

This concludes the onboarding process.

---

h1. Appendix: Change Ticket Validation Logic

| Type                               | Required at Stage | Requirements                                                                 |
|------------------------------------|-------------------|------------------------------------------------------------------------------|
| Onboarding Change Ticket           | Submission        | Must be *approved*, *active*, and in *valid window*.                        |
| Property & Security Config Ticket  | Production        | May be draft at first, but must be *approved* before production activation. |

Each change ticket is evaluated for:

- Approval state  
- Deployment time frame (current time vs change window)  
- Access group membership of the approver (via assignment group match)  

---

h1. Appendix: Glossary

| Term               | Description                                                 |
|--------------------|-------------------------------------------------------------|
| SC-{AccessGroup}   | Security Configuration suffix for the cloned environment    |
| CPS                | Akamai’s Certificate Provisioning System                    |
| Match Target       | Ruleset routing object for hostname/path mapping            |
| Front Door Form    | Jira form used to initiate the onboarding pipeline          |

