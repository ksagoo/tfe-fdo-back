def update_rate_policies(session, base_url, config_id, version, access_group, search_client_lists_by_id, search_client_lists_by_name):
    url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/rate-policies"
    result = { "processed": 0, "successful": 0, "failed": 0, "skipped": 0, "details": [] }

    try:
        response = session.get(url)
        response.raise_for_status()
        policies = response.json().get("ratePolicies", [])
    except Exception as e:
        print(f"[ERROR] Failed to fetch rate policies: {e}")
        return result

    result["processed"] = len(policies)

    for policy in policies:
        policy_id = policy.get("id")
        original_name = policy.get("name", "")
        updated = False

        # Step 1: Rename policy if it's still using the template naming
        if "Security Policy Template" in original_name:
            suffix = original_name.split("Security Policy Template")[-1].strip()
            new_name = f"SC-{access_group} {suffix}"
            policy["name"] = new_name
            updated = True
        else:
            new_name = original_name

        # Step 2: Update additionalMatchOptions for network list ID replacements
        for option in policy.get("additionalMatchOptions", []):
            if option.get("type") == "NetworkListCondition":
                original_ids = option.get("values", [])
                new_ids = []

                for list_id in original_ids:
                    # Step 2a: Get original name from list ID
                    matches = search_client_lists_by_id(session, base_url, list_id)
                    if not matches:
                        result["failed"] += 1
                        result["details"].append({
                            "id": policy_id,
                            "name": new_name,
                            "status": "skipped",
                            "reason": f"No match found for list ID: {list_id}"
                        })
                        break  # Don't continue this policy

                    original_name = matches[0][1]
                    if "Security Policy Template" not in original_name:
                        result["failed"] += 1
                        result["details"].append({
                            "id": policy_id,
                            "name": new_name,
                            "status": "skipped",
                            "reason": f"Template name not found for list ID: {list_id}"
                        })
                        break

                    # Step 2b: Build expected SC-* list name and find new ID
                    suffix = original_name.split("Security Policy Template")[-1].strip()
                    new_lookup = f"SC-{access_group} {suffix}"
                    new_match = search_client_lists_by_name(session, base_url, new_lookup)

                    if not new_match:
                        result["failed"] += 1
                        result["details"].append({
                            "id": policy_id,
                            "name": new_name,
                            "status": "skipped",
                            "reason": f"No matching client list found for: {new_lookup}"
                        })
                        break

                    new_ids.append(new_match[0][0])  # list_id only
                    updated = True

                option["values"] = new_ids  # Replace values with list_id only

        if updated:
            put_url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/rate-policies/{policy_id}"
            try:
                # Optional debug
                # print("Payload:", json.dumps(policy, indent=2))

                put_response = session.put(put_url, json=policy)
                put_response.raise_for_status()

                result["successful"] += 1
                result["details"].append({
                    "id": policy_id,
                    "name": new_name,
                    "status": "success"
                })
            except Exception as e:
                result["failed"] += 1
                result["details"].append({
                    "id": policy_id,
                    "name": new_name,
                    "status": "failed",
                    "error": str(e)
                })
        else:
            result["skipped"] += 1

    return result
