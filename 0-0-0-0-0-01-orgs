def reassign_slow_post_protection(session, base_url, config_id, version, old_policy_id, new_policy_id):
    print("[INFO] RUNNING: reassign_slow_post_protection")

    url = f"{base_url}/appsec/v1/configs/{config_id}/versions/{version}/slow-post"
    summary = {
        "processed": 0,
        "successful": 0,
        "failed": 0,
        "details": []
    }

    try:
        response = session.get(url)
        response.raise_for_status()
        data = response.json()

        # If the slow post rule belongs to the old policy, reassign it
        if data.get("policyId") == old_policy_id:
            data["policyId"] = new_policy_id
            summary["processed"] = 1

            try:
                session.put(url, json=data)
                summary["successful"] = 1
                summary["details"].append({
                    "id": "slow-post",
                    "status": "success"
                })
            except Exception as e:
                summary["failed"] = 1
                summary["details"].append({
                    "id": "slow-post",
                    "status": "failed",
                    "error": str(e)
                })

    except requests.exceptions.HTTPError as e:
        if e.response.status_code == 404:
            print(f"[INFO] No slow POST rule found for policy {old_policy_id}, skipping reassignment.")
            # Return empty summary â€” still a successful skip
            return summary
        else:
            print(f"[ERROR] HTTP error while fetching slow POST rule: {str(e)}")
            summary["failed"] = 1
            summary["details"].append({
                "id": "fetch",
                "status": "failed",
                "error": str(e)
            })
    except Exception as ex:
        print(f"[ERROR] Unexpected error during slow POST reassignment: {str(ex)}")
        summary["failed"] = 1
        summary["details"].append({
            "id": "fetch",
            "status": "failed",
            "error": str(ex)
        })

    return summary
