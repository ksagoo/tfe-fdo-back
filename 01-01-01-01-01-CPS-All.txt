Wrap run_session loop

Find the main for ex in order: loop inside run_session and change it to:
    try:
        for ex in order:
            try:
                choice, ok = run_single(ex, time_limit=time_limit, args_pause=args_pause)
            except KeyboardInterrupt:
                print("\n[Session cancelled by interviewer]")
                break
            rows.append((ex, EXERCISES[ex].get('desc',''), choice, ok))
            if ok:
                total += 1
    except KeyboardInterrupt:
        print("\n[Session cancelled by interviewer]")


2. Wrap the top-level main()

At the bottom of main(), where you call run_session(...), wrap it like this:

    try:
        run_session(
            order,
            time_limit=args.time_limit,
            args_pause=args.pause,
            output_dir=args.output_dir,
            results_file=args.results_file,
            display_results=not args.no_display_results,
            candidate_name=candidate_name,
            pdf=args.pdf,
            pdf_file=args.pdf_file,
        )
    except KeyboardInterrupt:
        # Final catch-all just in case; avoid traceback
        print("\n[Session cancelled] Results (so far) have been written.")



"""
Python Debugging Interview â€” Candidate-Safe Runner
==================================================

This is the **candidate-facing** version of the interview tool.
It **never reveals** correct answers, does **not** show per-question PASS/FAIL,
and only writes results to files for the interviewer/agency.

What the candidate sees
-----------------------
- Header: "Exercise N - <short description>"
- Buggy code snippet
- Three options (A/B/C) in random order
- A prompt to enter A/B/C

What is NOT shown
-----------------
- No PASS/FAIL after each question
- No "correct answer was ..." reveal
- No code execution outputs

Outputs
-------
- **CSV**: per-question PASS/FAIL, totals, percentage
- **Optional PDF** (with `--pdf`): agency summary with only "Ex NN: PASS/FAIL",
  candidate name, timestamp, and overall score. No code or question text.

Command line
------------
Usage:
  python interview_debug_showcode_candidate.py [--all | --pick N N ...] [options]

Required (choose one):
  --all                        Run all exercises.
  --pick 2 5 8                 Run only the listed exercises.

Common options:
  --shuffle                    Shuffle exercise order.
  --limit N                    Limit number of exercises after shuffle/filter.
  --time-limit SECS            Seconds allowed for entering a choice (0 = no limit).
  --pause                      Pause after each exercise and clear the screen.

Output options:
  --name "Candidate Name"      Name used in files (prompted if omitted).
  --output-dir PATH            Directory for results (default: current directory).
  --results-file NAME.csv      Exact CSV filename (overrides generated one).
  --no-display-results         Do NOT print final summary on screen (still saved to files).

Agency PDF:
  --pdf                        Also write a one-page PDF summary (no question details).
  --pdf-file NAME.pdf          Explicit PDF filename (overrides generated one).

Examples
--------
  # Run all, pause between exercises, and save PDF + CSV with no visiual display at end of test
  python interview_debug_showcode_candidate.py \
      --all --shuffle --pause \
      --name "Jane Doe" \
      --output-dir results \
      ----no-display-results \
      --pdf

  # Pick specific questions, custom CSV/PDF filenames, hide on-screen summary
  python interview_debug_showcode_candidate.py \
      --pick 2 5 8 10 \
      --name "John Smith" \
      --results-file agency_submission.csv \
      --pdf --pdf-file agency_summary.pdf \
      --no-display-results
"""
