# Normalize both sides to ensure match
normalized_current = current_policy.lower()
normalized_old = old_policy_id.strip().lower()

print(f"[DEBUG] Comparing normalized: {normalized_current} == {normalized_old}")

if normalized_current == normalized_old:
    # Patch security policy ID
    target["securityPolicy"]["policyId"] = new_policy_id

    # Patch hostnames safely
    if hostnames:
        if "filePaths" in target and isinstance(target["filePaths"], list) and target["filePaths"]:
            target["filePaths"][0]["hostnames"] = hostnames
            print(f"[INFO] Updated hostnames to: {hostnames}")
        else:
            print("[WARN] Skipping hostname update â€” filePaths invalid")

    put_url = f"/appsec/v1/configs/{config_id}/versions/{version}/match-targets/{target['targetId']}"
    print(f"[DEBUG] PUT URL: {put_url}")
    print(f"[DEBUG] Final Payload:\n{json.dumps(target, indent=2)}")

    put_resp = session.put(urljoin(base_url, put_url), json=target)
    put_resp.raise_for_status()
    reassigned.append(target["targetId"])
    print(f"[VALIDATE] Reassigned Target: {target['targetId']}")
