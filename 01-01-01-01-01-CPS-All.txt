1. Find the existing CSV writing block

Near the end of your script you should see a section that writes out the summary_rows and detail_rows to CSV files.
It will look something like this (simplified):

with open(summary_path, "w", newline="", encoding="utf-8") as f:
    writer = csv.DictWriter(f, fieldnames=["exercise", "result"])
    writer.writeheader()
    for row in summary_rows:
        writer.writerow(row)

with open(detail_path, "w", newline="", encoding="utf-8") as f:
    writer = csv.DictWriter(f, fieldnames=[...])
    writer.writeheader()
    for row in detail_rows:
        writer.writerow(row)

2. Delete/replace that section

Replace it with the new write_results function I provided:

import csv

def write_results(summary_rows, detail_rows, candidate_name, output_dir, results_file, details_file):
    import os
    from datetime import datetime

    # Ensure output directory exists
    os.makedirs(output_dir, exist_ok=True)

    # --- Summary CSV ---
    summary_path = os.path.join(output_dir, results_file or f"combined_summary_{candidate_name}_{datetime.now().strftime('%Y%m%d')}.csv")
    with open(summary_path, "w", newline="", encoding="utf-8-sig") as f:   # UTF-8 BOM for Excel
        writer = csv.DictWriter(f, fieldnames=["exercise", "result"])
        writer.writeheader()
        for row in summary_rows:
            writer.writerow(row)

    # --- Details CSV ---
    detail_path = os.path.join(output_dir, details_file or f"combined_details_{candidate_name}_{datetime.now().strftime('%Y%m%d')}.csv")
    with open(detail_path, "w", newline="", encoding="utf-8-sig") as f:
        fieldnames = [
            "exercise", "platform", "title", "description",
            "chosen_label", "chosen_ok", "correct_label_if_wrong",
            "buggy_code", "chosen_code", "correct_code_if_wrong",
            "explanation"
        ]
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        for row in detail_rows:
            # add explanation if missing (for Python)
            if not row.get("explanation"):
                row["explanation"] = PY_EXPLANATIONS.get(row["exercise"], "")
            writer.writerow(row)


# --- Python explanations mapping ---
PY_EXPLANATIONS = {
    1: "Indentation must be corrected",
    2: "Fix NameError by using correct variable",
    3: "Avoid mutable default arguments",
    4: "Correct off-by-one in range()",
    5: "Use f-string formatting",
    6: "Convert list items to str before join",
    7: "Sort tuples with correct key function",
    8: "Use dict.get() for counting instead of append",
    9: "Catch ZeroDivisionError properly",
    10: "Use generator expression instead of slicing",
    11: "Reverse string using slicing",
    12: "Use asyncio.run() and await coroutines",
    13: "Use json.loads() instead of eval",
    14: "Use enumerate(..., start=1) for indices",
}

3. Update your main call

Wherever your script currently calls something like:
# old
save_results(summary_rows, detail_rows, candidate_name, args.output_dir, args.results_file, args.details_file)

Change it to:
# new
write_results(summary_rows, detail_rows, candidate_name, args.output_dir, args.results_file, args.details_file)






