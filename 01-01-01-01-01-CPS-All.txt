[
{% for target in targets %}
{
  "configId": {{ target.configId }},
  "configVersion": {{ target.configVersion }},
  "targetId": {{ target.targetId }},
  "sequence": {{ target.sequence }},
  "defaultFile": "{{ target.defaultFile }}",
  "effectiveSecurityControls": {
    "applyApiConstraintControls": {{ target.effectiveSecurityControls.applyApiConstraintControls | lower }},
    "applyApplicationLayerControls": {{ target.effectiveSecurityControls.applyApplicationLayerControls | lower }},
    ...
  },
  "filePaths": {{ target.filePaths | tojson }},
  "hostnames": {{ target.hostnames | tojson }},
  ...
  "securityPolicy": {
    "policyId": "{{ target.securityPolicy.policyId }}"
  }
}
{% if not loop.last %},{% endif %}
{% endfor %}
]


rendered = render_template(env, "match_targets_full_template.j2", {"targets": config["match_targets"]})

try:
    target_list = json.loads(rendered)
    if isinstance(target_list, list):
        save_rendered_output(args.output_dir, "match_targets.json", json.dumps(target_list, indent=2))
    else:
        print("[ERROR] Rendered match_targets is not a list.")
except Exception as e:
    print(f"[ERROR] Failed to render match_targets list: {e}")


if "match_targets" in config:
    rendered = render_template(env, "match_targets_full_template.j2", {"targets": config["match_targets"]})
    try:
        target_list = json.loads(rendered)
        if isinstance(target_list, list):
            save_rendered_output(args.output_dir, "match_targets.json", json.dumps(target_list, indent=2))
        else:
            print("[ERROR] Rendered match_targets is not a list.")
    except Exception as e:
        print(f"[ERROR] Failed to render match_targets list: {e}")
