def get_all_fqdns(session, base_url, debug=False):
    """Fetch all hostnames (FQDNs) from PAPI."""
    url = f"{base_url}/papi/v1/hostnames"
    print(f"[INFO] Fetching all hostnames via {url}")

    try:
        resp = session.get(url, timeout=60)
        if resp.status_code != 200:
            print(f"[ERROR] Failed to fetch hostnames: HTTP {resp.status_code}")
            return []  # 

        data = resp.json() or {}
        if debug:
            write_json(data, "output/raw_all_hostnames.json")

        host_entries = []
        if "hostnames" in data:
            # Handle nested structure like in Akamai docs
            host_data = data["hostnames"]
            if isinstance(host_data, dict):
                host_entries = host_data.get("items", [])
            elif isinstance(host_data, list):
                host_entries = host_data
        elif "items" in data:
            host_entries = data["items"]

        fqdns = []
        for entry in host_entries:
            cname_from = entry.get("cnameFrom")
            if cname_from:
                fqdns.append(cname_from)

        print(f"[INFO] Retrieved {len(fqdns)} FQDNs from PAPI")
        return sorted(set(fqdns)) 

    except Exception as e:
        print(f"[ERROR] Exception in get_all_fqdns(): {e}")
        return []  # âœ… return safe empty list
