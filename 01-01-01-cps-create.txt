# =============================================================================
# PAPI Check (Final Full Match Logic)
# =============================================================================
def check_papi(session, base_url, fqdn, access_group, debug=False):
    url = f"{base_url}/papi/v1/hostnames"
    print(f"[INFO] PAPI lookup: {url}")
    matches, partials = [], []
    try:
        resp = session.get(url, timeout=(10, 60))
        data = safe_json(resp)
        if debug:
            write_json(data, f"output/raw_papi_{sanitize_filename(fqdn)}.json")

        fqdn_l = fqdn.lower().rstrip(".")
        ag_l = access_group.lower()
        hosts = data.get("hostnames") or data.get("items") or []

        for h in hosts:
            if isinstance(h, str):
                cname_from = h.lower().rstrip(".")
                prop_name = ""
            else:
                cname_from = str(h.get("cnameFrom", "")).lower().rstrip(".")
                prop_name = str(h.get("propertyName", "")).lower()

            fqdn_match = (fqdn_l == cname_from) or (fqdn_l in cname_from)
            ag_match = ag_l in prop_name

            if fqdn_match and ag_match:
                matches.append({
                    "propertyName": h.get("propertyName"),
                    "cnameFrom": h.get("cnameFrom"),
                    "matchType": "full"
                })
                if debug:
                    print(f"[DEBUG] PAPI full match → cnameFrom={cname_from}, property={prop_name}")
            elif fqdn_match or ag_match:
                reason = "fqdn_only" if fqdn_match else "access_group_only"
                partials.append({
                    "propertyName": h.get("propertyName"),
                    "cnameFrom": h.get("cnameFrom"),
                    "matchType": "partial",
                    "reason": reason
                })
                if debug:
                    print(f"[DEBUG] PAPI partial → cnameFrom={cname_from}, property={prop_name}, reason={reason}")

        result = {
            "found": bool(matches),
            "partial": bool(partials) and not matches,
            "url": url,
            "matches": matches,
            "partial_matches": partials
        }

        print(f"[RESULT] PAPI: {'FOUND' if matches else ('PARTIAL MATCH' if partials else 'NOT FOUND')}")
        return result

    except Exception as e:
        print(f"[ERROR] PAPI lookup failed: {e}")
        if debug:
            traceback.print_exc()
        return {"found": False, "partial": False, "url": url, "matches": [], "partial_matches": []}
