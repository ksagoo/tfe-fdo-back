def check_appsec(session, base_url, fqdn, access_group, debug=False):
    """Validate against AppSec API, including nested hostnames in productionHostnames/stagingHostnames."""
    url = f"https://{base_url}/appsec/v1/configs?contractId=V-5A82MTA&groupId=272095"
    if debug:
        print(f"[INFO] AppSec lookup: {url}")
    result = {
        "found": False,
        "partial": False,
        "url": url,
        "matches": [],
        "partial_matches": []
    }

    try:
        resp = session.get(url)
        data = resp.json()

        for item in data.get("configurations", []):
            name = item.get("name", "")
            prod_hosts = item.get("productionHostnames", [])
            staging_hosts = item.get("stagingHostnames", [])
            all_hosts = prod_hosts + staging_hosts

            # --- FULL MATCH: FQDN appears in nested hostnames and access group matches ---
            if fqdn in all_hosts and access_group in name:
                result["found"] = True
                result["matches"].append({
                    "id": item.get("id"),
                    "name": name,
                    "matchType": "full",
                    "fqdn": fqdn,
                    "source": "productionHostnames" if fqdn in prod_hosts else "stagingHostnames"
                })
                if debug:
                    print(f"[DEBUG] AppSec FULL = fqdn={fqdn}, config={name}")

            # --- PARTIAL MATCH: access group matches but FQDN not listed ---
            elif access_group in name:
                result["partial"] = True
                result["partial_matches"].append({
                    "id": item.get("id"),
                    "name": name,
                    "matchType": "partial",
                    "reason": "access_group_only"
                })
                if debug:
                    print(f"[DEBUG] AppSec PARTIAL = access_group={access_group}, config={name}")

            # --- PARTIAL MATCH: FQDN found in hostnames, but unrelated config ---
            elif fqdn in all_hosts:
                result["partial"] = True
                result["partial_matches"].append({
                    "id": item.get("id"),
                    "name": name,
                    "matchType": "partial",
                    "reason": "fqdn_only"
                })
                if debug:
                    print(f"[DEBUG] AppSec PARTIAL = fqdn={fqdn}, config={name}")

        if debug:
            if result["found"]:
                print("[RESULT] AppSec: FOUND")
            elif result["partial"]:
                print("[RESULT] AppSec: PARTIAL MATCH")
            else:
                print("[RESULT] AppSec: NOT FOUND")

    except Exception as e:
        print(f"[ERROR] AppSec lookup failed: {e}")
        if debug:
            traceback.print_exc()

    return result
