#!/bin/bash
# =====================================================
# Akamai Entitlement Validator - Live Test Suite
# =====================================================
# Runs the entitlement validation checks (CPS, AppSec, PAPI)
# across one or more FQDNs using akamai_entitlement_validator.py.
# 
# Usage:
#   ./entitlement_validator_suite.sh --section APAC --access-group AppSec
#   ./entitlement_validator_suite.sh --section PROD --access-group CertOps --fqdn login.example.com
#
# Options:
#   --section        Section name from .edgerc (e.g., DEV, APAC, PROD)
#   --access-group   Akamai access group name
#   --fqdn           (Optional) Single FQDN to validate. 
#                    If not supplied, reads from fqdn_list.txt
#
# Requirements:
#   - akamai_entitlement_validator.py in same directory
#   - .edgerc configured and reachable
#   - output/ directory writable
#
# Exit Codes:
#   0 = All tests authorized
#   1 = One or more unauthorized or failed
# =====================================================

set -Eeuo pipefail
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PYTHON_CMD="python"  # Adjust if needed

# Defaults
FQDN_LIST_FILE="${SCRIPT_DIR}/fqdn_list.txt"
OUTPUT_DIR="${SCRIPT_DIR}/output"
mkdir -p "$OUTPUT_DIR"

# Parse args
SECTION=""
ACCESS_GROUP=""
SINGLE_FQDN=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    --section) SECTION="$2"; shift 2 ;;
    --access-group) ACCESS_GROUP="$2"; shift 2 ;;
    --fqdn) SINGLE_FQDN="$2"; shift 2 ;;
    *) echo "Unknown option: $1"; exit 1 ;;
  esac
done

if [[ -z "$SECTION" || -z "$ACCESS_GROUP" ]]; then
  echo "[ERROR] Both --section and --access-group are required."
  exit 1
fi

# =====================================================
# Helper: run a single validation
# =====================================================
run_validation() {
  local fqdn="$1"
  echo "-----------------------------------------------------"
  echo "[TEST] Validating entitlement for FQDN: ${fqdn}"
  echo "-----------------------------------------------------"

  local cmd="${PYTHON_CMD} ${SCRIPT_DIR}/akamai_entitlement_validator.py \
    --section ${SECTION} \
    --access-group ${ACCESS_GROUP} \
    --fqdn ${fqdn}"

  echo "[COMMAND] $cmd"
  local start_time=$(date +%s)

  set +e
  eval "$cmd" >"${OUTPUT_DIR}/${fqdn}.log" 2>&1
  local status=$?
  set -e

  local end_time=$(date +%s)
  local duration=$((end_time - start_time))

  if [[ $status -eq 0 ]]; then
    echo "[RESULT] PASS (${duration}s)"
    echo "${fqdn},PASS" >>"${OUTPUT_DIR}/summary.csv"
    return 0
  else
    echo "[RESULT] FAIL (${duration}s)"
    echo "${fqdn},FAIL" >>"${OUTPUT_DIR}/summary.csv"
    return 1
  fi
}

# =====================================================
# Run tests (single or multiple)
# =====================================================
TOTAL=0
PASS=0
FAIL=0

if [[ -n "$SINGLE_FQDN" ]]; then
  echo "[INFO] Running single FQDN test: ${SINGLE_FQDN}"
  run_validation "$SINGLE_FQDN" && PASS=$((PASS+1)) || FAIL=$((FAIL+1))
  TOTAL=1
else
  echo "[INFO] Reading FQDN list from ${FQDN_LIST_FILE}"
  if [[ ! -f "$FQDN_LIST_FILE" ]]; then
    echo "[ERROR] Missing fqdn_list.txt and no --fqdn specified."
    exit 1
  fi

  while IFS= read -r fqdn || [[ -n "$fqdn" ]]; do
    [[ -z "$fqdn" ]] && continue
    TOTAL=$((TOTAL+1))
    run_validation "$fqdn" && PASS=$((PASS+1)) || FAIL=$((FAIL+1))
    sleep 1
  done < "$FQDN_LIST_FILE"
fi

# =====================================================
# Summary
# =====================================================
echo
echo "====================================================="
echo " Entitlement Validator Summary"
echo "====================================================="
echo " Total FQDNs : ${TOTAL}"
echo " Authorized  : ${PASS}"
echo " Unauthorized/Failed : ${FAIL}"
echo " Output logs : ${OUTPUT_DIR}/"
echo "-----------------------------------------------------"

if [[ $FAIL -eq 0 ]]; then
  echo "[SUMMARY] All tests PASSED."
  exit 0
else
  echo "[SUMMARY] Some tests FAILED."
  exit 1
fi
