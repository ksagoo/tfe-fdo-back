from urllib.parse import urljoin

def check_group_exists(session, base_url, group_name, debug=False):
    """
    Checks if an Akamai Access Group already exists using the AppSec groups endpoint.
    This avoids IAM permission issues from user-admin APIs.

    Args:
        session: Authenticated Akamai EdgeGrid session
        base_url (str): Base API hostname
        group_name (str): Target access group name
        debug (bool): Enable verbose logging

    Returns:
        bool: True if group exists, False otherwise
    """
    try:
        url = urljoin(base_url, "appsec/v1/groups")
        headers = {"accept": "application/json"}

        if debug:
            print(f"[INFO] Access Group lookup: {url}")

        resp = session.get(url, headers=headers, timeout=30)
        if resp.status_code != 200:
            print(f"[ERROR] Failed to fetch groups: {resp.status_code} - {resp.text[:300]}")
            return False

        groups = resp.json().get("groups", [])
        target = group_name.lower().strip()

        for g in groups:
            name = g.get("groupName", "").lower().strip()
            if name == target:
                if debug:
                    print(f"[DEBUG] Group found: {g.get('groupName')} (ID: {g.get('groupId')})")
                return True

        if debug:
            print(f"[DEBUG] Group '{group_name}' not found in {len(groups)} AppSec groups.")
        return False

    except Exception as e:
        print(f"[ERROR] check_group_exists() failed: {e}")
        return False
