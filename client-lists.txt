def activate_client_list(session, base_url, list_id, networks=["STAGING"], notes="", pr_link="", notification_emails=None):
    """
    Activates the given client list for the specified networks.
    This mirrors the GUI behavior including support for notification email.
    """
    url = f"{base_url}/client-list/v1/lists/{list_id}/activate"
    headers = {"accept": "application/json", "content-type": "application/json"}

    payload = {
        "networks": networks,  # Example: ["STAGING"] or ["PRODUCTION"]
    }

    if notes:
        payload["notes"] = notes
    if pr_link:
        payload["prLink"] = pr_link
    if notification_emails:
        payload["notificationEmails"] = notification_emails

    try:
        response = session.post(url, headers=headers, json=payload)
        response.raise_for_status()
        print(f"[INFO] Activation request sent for list {list_id} to {networks}")
        return True
    except requests.exceptions.HTTPError as e:
        print(f"[ERROR] Activation failed â€” Status: {response.status_code}, Body: {response.text}")
        return False
    except Exception as e:
        print(f"[ERROR] Unexpected error during activation: {e}")
        return False


activate_client_list(
    session,
    base_url,
    created_id,
    networks=["STAGING"],  # or ["PRODUCTION"] if needed
    notes="Automated activation from script",
    notification_emails=["kuldeep.sagoo@hsbc.com"]
)
